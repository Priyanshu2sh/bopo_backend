"""
Django settings for bopo_backend project.

Generated by 'django-admin startproject' using Django 5.0.9.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load .env file
load_dotenv(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", "django-insecure-fallback-secret-key")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG=False


ALLOWED_HOSTS = ['*']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'bopo_admin',
    'bopo_award',
    'bopo',    # 'bopo_customer',
    'accounts',
    'transaction_history',
    'rest_framework',
    'corsheaders',
    'qr_store', 
    'transfer',
    'channels',
]

CORS_ALLOW_ALL_ORIGINS = True
APPEND_SLASH = True


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'bopo_admin.middleware.CorporateStatusCheckMiddleware', 
    'bopo_admin.login_required_middleware.LoginRequiredMiddleware',
    'bopo_backend.middleware.Custom404Middleware',
]

CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'access-control-allow-origin',
]

CSRF_TRUSTED_ORIGINS = [
    "https://8e09-103-211-60-165.ngrok-free.app",
    "https://3fb0-2401-4900-79d1-d74-6851-4650-8615-4650-8615-f92c.ngrok-free.app",
    "https://7a22-2401-4900-57c6-ae7c-e933-a11b-70e7-85f4.ngrok-free.app",
]

ROOT_URLCONF = 'bopo_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'bopo_admin.context_processors.employee_permissions',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'accounts.context_processors.logo_context',  
            ],
        },
    },
]

# ASGI application
ASGI_APPLICATION = "bopo_backend.routing.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("redis", 6379)],
            # "hosts": [("127.0.0.1", 6379)],
        },
    },
}

# Timezone settings
USE_TZ = True
TIME_ZONE = 'Asia/Kolkata'

SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Keeps session after browser is closed
SESSION_COOKIE_AGE = 2592000  # 30 days in seconds (used if remember_me is checked)



# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = '006iipt@gmail.com'  # Your Gmail
# EMAIL_HOST_PASSWORD = 'xjfy bjcc vkpm ljmu'  # App password from step above
# DEFAULT_FROM_EMAIL = 'BOPO Team <006iipt@gmail.com>'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = '006iipt@gmail.com'  # Your Gmail
EMAIL_HOST_PASSWORD = 'xjfybjccvkpmljmu'  # App password (not your Gmail password)
DEFAULT_FROM_EMAIL = 'BOPO Team <006iipt@gmail.com>'
# DEFAULT_DOMAIN = "127.0.0.1:8000"


# settings.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}

# Database configuration from environment variables
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv("DB_NAME"),
        'USER': os.getenv("DB_USER"),
        'PASSWORD': os.getenv("DB_PASSWORD"),
        'HOST': os.getenv("DB_HOST"),
        'PORT': os.getenv("DB_PORT"),
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]

AUTH_USER_MODEL = 'bopo_admin.BopoAdmin'
LOGIN_URL = '/login/'

# Twilio Configuration
TWILIO_ACCOUNT_SID = "ACefc2b57333c60eaaea16e2ba775ade3c"
TWILIO_AUTH_TOKEN = "429cf6ac7db12f61126cf0bbdee64d3d"
TWILIO_PHONE_NUMBER = "+12706338124"

# Internationalization
LANGUAGE_CODE = 'en-us'

USE_I18N = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_DIRS = [
    BASE_DIR / 'bopo_admin/static/',
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files (Uploaded files)
MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


